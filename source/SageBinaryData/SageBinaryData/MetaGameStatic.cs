#if KANESWRATH
using Relo;
using System.Runtime.InteropServices;
using AnsiString = Relo.String<sbyte>;

namespace SageBinaryData;

[StructLayout(LayoutKind.Sequential)]
public struct MetaGameStaticData
{
    public BaseAssetType Base;
    public float TiberiumAveragingRange;
    public float GreenZoneCutoff;
    public float YellowZoneCutoff;
    public AnsiString BattleMarker;
    public float AutoresolveDamageofBase;
    public uint MaxAutoresolveAttacksPerBase;
    public float MarkerOffsetDistance;
    public float MoveLineTextureDistance;
    public float MoveLineWidth;
    public AnsiString MoveTurnMarker;
    public AnsiString MoveLineTexture;
    public AnsiString PlayerAtNegativeOpsPointsEvent;
    public AnsiString Meva_ASATDefensesComplete;
    public AnsiString Meva_ASATDefensesDestroyed;
    public AnsiString Meva_AutoResolve;
    public AnsiString Meva_AutoResolveBattleLost;
    public AnsiString Meva_AutoResolveBattleWon;
    public AnsiString Meva_BadDestination;
    public AnsiString Meva_BaseAttacked;
    public AnsiString Meva_BaseDestroyed;
    public AnsiString Meva_BattleHappens;
    public AnsiString Meva_BattlePhaseNo;
    public AnsiString Meva_BattlePhaseYes;
    public AnsiString Meva_BuildBase;
    public AnsiString Meva_BuildSF;
    public AnsiString Meva_BuildStratBldg;
    public AnsiString Meva_Cancel;
    public AnsiString Meva_DecBase;
    public AnsiString Meva_DecSF;
    public AnsiString Meva_DeploySF;
    public AnsiString Meva_EnemyBaseKill;
    public AnsiString Meva_EnemyBaseSigh;
    public AnsiString Meva_EnemyUnitSigh;
    public AnsiString Meva_EradicatorBuild;
    public AnsiString Meva_EradicatorDestroyed;
    public AnsiString Meva_EradicatorReady;
    public AnsiString Meva_GDIElim;
    public AnsiString Meva_IntelCenterComplete;
    public AnsiString Meva_IntelCenterDestroyed;
    public AnsiString Meva_LifeRecyclePlantComplete;
    public AnsiString Meva_LifeRecyclePlantDestroyed;
    public AnsiString Meva_MARVBuild;
    public AnsiString Meva_MARVDestroyed;
    public AnsiString Meva_MARVReady;
    public AnsiString Meva_MoveSF;
    public AnsiString Meva_NewPowersAv;
    public AnsiString Meva_NoBattles;
    public AnsiString Meva_NoComply;
    public AnsiString Meva_NodElim;
    public AnsiString Meva_OpsPhaseEnd;
    public AnsiString Meva_OpsPhaseStart;
    public AnsiString Meva_Patrola;
    public AnsiString Meva_Patrolb;
    public AnsiString Meva_PortCaptured;
    public AnsiString Meva_PropCenterComplete;
    public AnsiString Meva_PropCenterDestroyed;
    public AnsiString Meva_ReclamatorHubComplete;
    public AnsiString Meva_ReclamatorHubDestroyed;
    public AnsiString Meva_RedeemerBuild;
    public AnsiString Meva_RedeemerDestroyed;
    public AnsiString Meva_RedeemerReady;
    public AnsiString Meva_RepairBase;
    public AnsiString Meva_RepairSF;
    public AnsiString Meva_RiftGeneratorComplete;
    public AnsiString Meva_RiftGeneratorDestroyed;
    public AnsiString Meva_ScrinElim;
    public AnsiString Meva_SecoObjAchiev;
    public AnsiString Meva_SFBaseKill;
    public AnsiString Meva_SFLost;
    public AnsiString Meva_SignalTowerComplete;
    public AnsiString Meva_SignalTowerDestroyed;
    public AnsiString Meva_StartBattle;
    public AnsiString Meva_StratBldgComplete;
    public AnsiString Meva_StratBldgDestroyed;
    public AnsiString Meva_SWHitYou;
    public AnsiString Meva_TempleOfNodComplete;
    public AnsiString Meva_TempleOfNodDestroyed;
    public AnsiString Meva_DisruptionArrayComplete;
    public AnsiString Meva_DisruptionArrayDestroyed;
    public AnsiString Meva_TerraNexusComplete;
    public AnsiString Meva_TerraNexusDestroyed;
    public AnsiString Meva_TiberiumForgeComplete;
    public AnsiString Meva_TiberiumForgeDestroyed;
    public AnsiString Meva_TibProcessingPlantComplete;
    public AnsiString Meva_TibProcessingPlantDestroyed;
    public AnsiString Meva_TowerCapture;
    public AnsiString Meva_TowerDestroyed;
    public AnsiString Meva_UpgBaseDef;
    public AnsiString Meva_UpgBasePow;
    public AnsiString Meva_UpgBaseTier;
    public AnsiString Meva_UpgSF;
    public AnsiString Meva_WarmechFacilityComplete;
    public AnsiString Meva_WarmechFacilityDestroyed;
    public AnsiString Meva_WarnSuperDete;
    public AnsiString Meva_WarpNimbusComplete;
    public AnsiString Meva_WarpNimbusDestroyed;
    public AnsiString Meva_YouFiredIC;
    public AnsiString Meva_YouFiredNuke;
    public AnsiString Meva_YouFiredRift;
    public AnsiString Meva_YouResign;
    public AnsiString Meva_EnemyIonDetected;
    public AnsiString Meva_EnemyTempleDetected;
    public AnsiString Meva_EnemyRiftDetected;
    public float NOD_TibLevel_Min;
    public float NOD_TibLevel_Max;
    public float NOD_PopLevel_Min;
    public float NOD_PopLevel_Max;
    public float NOD_UnrestLevel_Min;
    public float NOD_UnrestLevel_Max;
    public int NOD_MinOwnedAlienTowers;
    public float GDI_TibLevel_Min;
    public float GDI_TibLevel_Max;
    public float GDI_PopLevel_Min;
    public float GDI_PopLevel_Max;
    public float GDI_UnrestLevel_Min;
    public float GDI_UnrestLevel_Max;
    public int GDI_MinDestroiedAlienTowers;
    public float SCRIN_TibLevel_Min;
    public float SCRIN_TibLevel_Max;
    public float SCRIN_PopLevel_Min;
    public float SCRIN_PopLevel_Max;
    public float SCRIN_UnrestLevel_Min;
    public float SCRIN_UnrestLevel_Max;
    public int SCRIN_MinOwnedAlienTowers;
    public Percentage GDIPercentOfWorldOwned;
    public Percentage NODPercentOfCitiesAt100Unrest;
    public Percentage ALIENNumberOfTowersOwned;
    public Percentage GDIPercentOfWorldOwnedEASY;
    public Percentage NODPercentOfCitiesAt100UnrestEASY;
    public Percentage ALIENNumberOfTowersOwnedEASY;
    public Percentage GDIPercentOfWorldOwnedHARD;
    public Percentage NODPercentOfCitiesAt100UnrestHARD;
    public Percentage ALIENNumberOfTowersOwnedHARD;
    public AssetReference<SpecialPowerTemplate> SFBuildLightPowerTemplate;
    public AssetReference<SpecialPowerTemplate> SFBuildMediumPowerTemplate;
    public AssetReference<SpecialPowerTemplate> SFBuildHeavyPowerTemplate;
    public AssetReference<SpecialPowerTemplate> SFBuildMetaPowerTemplate;
    public AnsiString SFBuildValidCursor;
    public AnsiString SFBuildInvalidCursor;
    public AnsiString SFBuildRadiusCursor;
    public Percentage MetaGDIIonBlastTier2BaseDestruction;
    public Percentage MetaGDIIonBlastTier3BaseDestruction;
    public Percentage MetaGDIIonBlastMediumStrikeForceDestruction;
    public Percentage MetaGDIIonBlastHeavyStrikeForceDestruction;
    public Percentage MetaGDIIonBlastMetaUnitStrikeForceDestruction;
    public Percentage MetaGDIOrcaStrikeLightStrikeForceDestruction;
    public Percentage MetaGDIOrcaStrikeMediumStrikeForceDestruction;
    public Percentage MetaGDIOrcaStrikeHeavyStrikeForceDestruction;
    public Percentage MetaGDIOrcaStrikeMetaUnitStrikeForceDestruction;
    public Percentage MetaGDIRefugeeAidUnrestModificationAmount;
    public int MetaGDIOrcaStrikeNumberOfBuildingsToDestroy;
    public int MetaGDIStateOfEmergencyNumberOfOPToGive;
    public int MetaGDIStateOfEmergenctNumberOfOPToTake;
    public float MetaGDIEmergencyCleanupAmountToDamageTiberiumBy;
    public float MetaGDIZOCOMInfiltrationAmountToDamageTiberiumBy;
    public Percentage MetaGDIZOCOMInfiltrationPercentOfDamageToBase;
    public Percentage MetaGDIZOCOMInfiltrationPercentOfDamageToStrikeForce;
    public float MetaNODRaiseInsurrectionUnrestModifier;
    public Percentage MetaNODTiberiumProductionSurgeTiberiumModifier;
    public int MetaNODTiberiumProductionSurgeOPModifier;
    public int MetaNODVertigoStrikeNumberOfBuildingsToDestroy;
    public float MetaNODTheFuryOfNodUnrestModifier;
    public Percentage MetaNODTheFuryOfNodPercentageOfTroopDamage;
    public float MetaNODSabotageChanceOfSuccess;
    public Percentage MetaNODNuclearMissleTier2BaseDestruction;
    public Percentage MetaNODNuclearMissleTier3BaseDestruction;
    public Percentage MetaNODNuclearMissleMediumStrikeForceDestruction;
    public Percentage MetaNODNuclearMissleHeavyStrikeForceDestruction;
    public Percentage MetaGNODNuclearMissleMetaUnitStrikeForceDestruction;
    public Percentage MetaNODVertigoStrikeLightStrikeForceDestruction;
    public Percentage MetaNODVertigoStrikeMediumStrikeForceDestruction;
    public Percentage MetaNODVertigoStrikeHeavyStrikeForceDestruction;
    public Percentage MetaGNODVertigoStrikeMetaUnitStrikeForceDestruction;
    public float MetaSCRINEradicatePopulationModifier;
    public float MetaSCRINIchorInjectionTiberiumModifier;
    public uint StartingPlayerOpsPoints;
    public uint StartingPlayerMaxTiberium;
    public uint StartingPlayerTiberium;
    public uint StartingPlayerFREETiberiumPerTurn;
    public Percentage MetaSCRINIonSuperStormBaseDestruction;
    public Percentage MetaSCRINIonSuperStormStrikeForceDestruction;
    public Percentage MetaSCRINPlanetaryBombardmentBaseDestruction;
    public Percentage MetaSCRINPlanetaryBombardmentStrikeForceDestruction;
    public Percentage MetaSCRINPlanetaryBombardmentPopulationReductionPercent;
    public Percentage MetaSCRINRiftGeneratorTier2BaseDestruction;
    public Percentage MetaSCRINRiftGeneratorTier3BaseDestruction;
    public Percentage MetaSCRINRiftGeneratorMediumStrikeForceDestruction;
    public Percentage MetaSCRINRiftGeneratorHeavyStrikeForceDestruction;
    public Percentage MetaSCRINRiftGeneratorMetaUnitStrikeForceDestruction;
    public AnsiString SummonSFBlackHandT1;
    public AnsiString SummonSFBlackHandT2;
    public AnsiString SummonSFBlackHandT3;
    public AnsiString SummonSFMarkedOfKane;
    public AnsiString SummonSFKaneLives;
    public AnsiString SummonSFSpecialForces;
    public AnsiString SummonSFAlienDropship;
    public float MaximumAOIRadius;
    public TypedAssetId<UpgradeTemplate> AllowStratBuilding1Upgrade;
    public TypedAssetId<UpgradeTemplate> AllowStratBuilding2Upgrade;
    public TypedAssetId<UpgradeTemplate> AllowStratBuilding3Upgrade;
    public TypedAssetId<UpgradeTemplate> AllowStratBuilding4Upgrade;
    public TypedAssetId<UpgradeTemplate> AllowStratBuilding5Upgrade;
    public TypedAssetId<GameObject> GDI_TempAirfield;
    public TypedAssetId<GameObject> STEEL_TempAirfield;
    public TypedAssetId<GameObject> ZOCOM_TempAirfield;
    public TypedAssetId<GameObject> NOD_TempAirfield;
    public TypedAssetId<GameObject> BHAND_TempAirfield;
    public TypedAssetId<GameObject> MARKED_TempAirfield;
    public TypedAssetId<GameObject> GDI_TempBaseHub;
    public TypedAssetId<GameObject> STEEL_TempBaseHub;
    public TypedAssetId<GameObject> ZOCOM_TempBaseHub;
    public TypedAssetId<GameObject> NOD_TempBaseHub;
    public TypedAssetId<GameObject> BHAND_TempBaseHub;
    public TypedAssetId<GameObject> MARKED_TempBaseHub;
    public TypedAssetId<GameObject> GDI_Rig;
    public TypedAssetId<GameObject> GDI_BattleBase;
    public TypedAssetId<GameObject> STEEL_Rig;
    public TypedAssetId<GameObject> STEEL_BattleBase;
    public TypedAssetId<GameObject> ZOCOM_Rig;
    public TypedAssetId<GameObject> ZOCOM_BattleBase;
    public float BasePlacementRadius;
    public float BaseStartingValue;
    public int TiberiumPointValue;
    public int CityPointValue;
    public int HighPointThreshold;
    public int LowPointThreshold;
    public float MinTiberiumValueOfNode;
    public float TiberiumValueOfNode;
    public AnsiString SkirmishLoadingScreen;
    public unsafe TypedAssetId<AudioEventInfo>* MetaGameLoadingMusic;
    public int PopulationBlinkieDisplay;
    public int UnrestBlinkieDisplay;
    public int BonusAlerts;
    public int BaseGather;
    public int UnresolvedBattle;
    public float TiberiumGrowthThresholdPercent;
    public float TiberiumAdjacencyDist;
    public float TiberuimGrowthAmount;
    public float CamMoveSpeedMult;
    public float CamEaseInPct;
    public float CamEaseOutPct;
    public int MGAIBaseValue0;
    public int MGAIBaseValue1;
    public int MGAIBaseValue2;
    public int MGAIBaseValue3;
    public int MGAIBaseValue4;
    public int MGAIBaseValue5;
    public int MGAIBaseValue6;
    public Color ColorOfOPSpendText;
    public Color ColorOfOPRefundText;
    public Color ColorOfGDIBonusText;
    public Color ColorOfNODBonusText;
    public Color ColorOfALIENBonusText;
    public Color ColorOfGDIGatherText;
    public Color ColorOfNODGatherText;
    public Color ColorOfALIENGatherText;
}
#endif
